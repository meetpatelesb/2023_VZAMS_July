
var sys = require('sys'),
    Parser = require('./log/parse'),
      latestLogs = Parser.latestLogs,
      LogFilesStreamer = Parser.LogFilesStreamer
    ;

function say(id)
{
//  if (id < 204)
//    return;
  sys.print('dump (' + id + ')');
  var args = Array.prototype.slice.call(arguments, 1);
  args.forEach(function(arg) {
    sys.puts(sys.inspect(arg, false, null));
  });
}

function msg(m,d)
{
  sys.print(m);
  sys.puts(d);
}

var sessions = {};

latestLogs(15, function(err, filenames) {
  var s = new LogFilesStreamer(filenames, function(err, streamer) {
    // response
    streamer.on(/ 488 sg/i, function(obj, line) {
      var bsid = obj[0],
          url = obj[2];
          
      say(201, obj);
      say(203, bsid);
      sessions[bsid] = sessions[bsid] || {req:0, res:0, urls:[]};
      sessions[bsid].res++;
      sessions[bsid].urls.push(obj[2]);
      if (obj.length > 4 && obj[4].length > 0)
        sessions[bsid].urls.push(obj[4][0].ty);
      else
        sessions[bsid].urls.push('--error--');
    });
    
    // static file
    streamer.on(/ 487 sg/i, function(obj, line) {
      var bsid = obj[0],
          url = obj[2];

      say(207, obj);
      say(208, bsid);
      sessions[bsid] = sessions[bsid] || {req:0, res:0, urls:[]};
      sessions[bsid].res++;
      sessions[bsid].urls.push(obj[2]);
    });
    
    streamer.stream(function() {
      say(202, sessions);
    });
    
  });
});


