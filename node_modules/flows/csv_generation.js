// this function converts the JSON to it's corresponding CSV format 

var convert=function(objArray)
{
   var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;
   var str = '';
   var keys=''       
   array.forEach(function(array)//for (var i = 0; i < array.length; i++) 
   {
     var line = '';
     for (var index in array)
     {
       
       
       if(typeof array[index] == 'object')
         {
            keys=index;
            line += "\n"+keys+"\n"+convert(array[index])
          }
          else
          {
            keys=index;
            if(index.indexOf('keys') == -1)
              line +=  keys+"  ,  "+array[index] + '\n';
            else
              line+=array[index] + '\n';
          }
        }
        line.slice(0,line.Length-1); 
        str +=line+"";            
   });
   return str;

}
exports.convert=convert;




//converts e-Gift matrix data into JSON 

var egift=function egift(array1)
{
  var array_sub=[];
  var tmparray = keys(array1[0]);
  var tmparray1; 
  var key={keys:"User,Request,Response"};
  array_sub.push(key);
  for(var i=0;i<tmparray.length;i++)
  {
    for(var k=1;k<array1.length;k++)
    {
      tmparray1=values(array1[k]);
      var egiftReq,egiftRes;
      for(var j=0;j<tmparray1.length;j++)
      {
         if(tmparray[i] ==tmparray1[j].key){
           switch(k)
           {
             case 1:
               egiftReq= tmparray1[j].value;
               break;
             case 3:
               egiftRes= tmparray1[j].value;
               break;
           }
         }
       }
     }
     var string=egiftReq+","+egiftRes;
     var obj={};
     var name = tmparray[i];
     obj[name] = string;
     array_sub.push(obj);
     egiftReq='undefined';
     egiftRes='undefined';
   }
   var array=[{
                "egift":array_sub
            }];
   return array;
}

exports.egift=egift;


//Converts droOut matrix data into JSON

var dropout=function dropout(array1,users)
{
  var array_sub=[{
                 "Users":users, 
                 "keys": "Screen name, Percentage(%), No of users",
                 "Index":Math.round(((keys(array1[0]).length) * 100 / tot )*Math.pow(10,2))/Math.pow(10,2)+ "," + (keys(array1[0]).length) ,
                 "Design":Math.round(((keys(array1[1]).length) * 100 / tot)*Math.pow(10,2))/Math.pow(10,2)+ "," +(keys(array1[1]).length) ,
                 "Merchant":Math.round(((keys(array1[2]).length) * 100 / tot)*Math.pow(10,2))/Math.pow(10,2) + "," +(keys(array1[2]).length),
                 "Personalize":Math.round(((keys(array1[3]).length) * 100 / tot)*Math.pow(10,2))/Math.pow(10,2)+ "," + (keys(array1[3]).length),
                 "Purchase":Math.round(((keys(array1[4]).length) * 100 / tot)*Math.pow(10,2))/Math.pow(10,2)+ "," +(keys(array1[4]).length) ,
                 "Place Order":Math.round(((keys(array1[5]).length) * 100 / tot)*Math.pow(10,2))/Math.pow(10,2) + "," +(keys(array1[5]).length),
                 "Print":Math.round(((keys(array1[6]).length) * 100 / tot)*Math.pow(10,2))/Math.pow(10,2) + "," +(keys(array1[6]).length)
              }]
  var array=[{
                "dropout":array_sub
            }];
  return array;
}

exports.dropout=dropout; 


//Converts average time per tab matrix to JSON

var timePerTab=function timePerTab(array1,users)
{
  var array_sub=[{
                "Users":users,
                "keys":"Screen name,Average(sec),Maximum(sec),Minimum(sec)",
                "Index":Math.round((aggregate(array1[0]) / tot)*Math.pow(10,2))/Math.pow(10,2)  + "," +  Math.round(arrayMax(array1[0])*Math.pow(10,2))/Math.pow(10,2) + ","+Math.round(arrayMin(array1[0])*Math.pow(10,2))/Math.pow(10,2) ,
                "Design":Math.round((aggregate(array1[1]) / tot)*Math.pow(10,2))/Math.pow(10,2)  + "," +  Math.round(arrayMax(array1[1])*Math.pow(10,2))/Math.pow(10,2) + ","+Math.round(arrayMin(array1[1])*Math.pow(10,2))/Math.pow(10,2) ,
                "Merchant":Math.round((aggregate(array1[2]) / tot)*Math.pow(10,2))/Math.pow(10,2)  + "," +  Math.round(arrayMax(array1[2])*Math.pow(10,2))/Math.pow(10,2) + ","+Math.round(arrayMin(array1[2])*Math.pow(10,2))/Math.pow(10,2) ,
                "Personalize":Math.round((aggregate(array1[3]) / tot)*Math.pow(10,2))/Math.pow(10,2)  + "," +  Math.round(arrayMax(array1[3])*Math.pow(10,2))/Math.pow(10,2) + ","+Math.round(arrayMin(array1[3])*Math.pow(10,2))/Math.pow(10,2) ,
                "Purchase":Math.round((aggregate(array1[4]) / tot)*Math.pow(10,2))/Math.pow(10,2)  + "," +  Math.round(arrayMax(array1[4])*Math.pow(10,2))/Math.pow(10,2) + ","+Math.round(arrayMin(array1[4])*Math.pow(10,2))/Math.pow(10,2) ,
                "Place Order":Math.round((aggregate(array1[5]) / tot)*Math.pow(10,2))/Math.pow(10,2)  + "," +  Math.round(arrayMax(array1[5])*Math.pow(10,2))/Math.pow(10,2) + ","+Math.round(arrayMin(array1[5])*Math.pow(10,2))/Math.pow(10,2) ,
                "Print":Math.round((aggregate(array1[6]) / tot)*Math.pow(10,2))/Math.pow(10,2)  + "," +  Math.round(arrayMax(array1[6])*Math.pow(10,2))/Math.pow(10,2) + ","+Math.round(arrayMin(array1[6])*Math.pow(10,2))/Math.pow(10,2) 
            }]
  var array=[{
                "avg_time_tab":array_sub
            }];
  return array;
}

exports.timePerTab=timePerTab; 



//Convert selected tab matrix to JSON

var selectedTab=function selectedTab(array1,array2)
{
  var art=[];
  var key={keys:"Art name,Total no"};
  art.push(key);
  arrArt = getcount_change(array1);
  for(x in arrArt){
    
    var artname=x.split("::");
    var obj={};
    var name = artname[1];
    obj[name] = arrArt[x];
    art.push(obj);
  }
  var merchant=[];
  var key={keys:"Merchant name,Amount,Quantity"};
  merchant.push(key);
  arrMer = getcount_change(array2);
  for(x in arrMer){
    var mername=x.split("$");
    var obj={};
    var name = mername[0];
    obj[name] = "$"+mername[1]+","+arrMer[x];
    merchant.push(obj);
  }
  var array_sub=[{
                "Artworkselectionmetrics":art,
                "Merchant":merchant
            }];
  var array=[{
                "select_tag":array_sub
            }];
  return array;
}

exports.selectedTab=selectedTab; 



//Creation of JSON from the Userdata

var userSelect=function userSelect(printinfoMetric,tagArt,tagMerchant){
  var array_sub=[];
  var array_ArtMerchant=[],array_userSelect=[];
  var key={keys:"User ID,Art,Merchant,Gift Denomination,Card Size,Page Size,Printer selected"};
  array_sub.push(key);
  // *********combine both art & merchant******
  
  for(var i=0;i<tagArt.length;i++)
  {
    if(tagArt)
    {            
      var set=0;
      
      for(var j=0;j<tagMerchant.length;j++)
      {               
        if(tagMerchant)
        {
            
          if(tagArt[i][0]==tagMerchant[j][0])
          { 
            set=1;
            array_ArtMerchant.push({
            bsid: tagArt[i][0],
            art: tagArt[i][1],
            merchant: tagMerchant[j][1] });
          }
        }
      }
      if(set==0)
      {
        array_ArtMerchant.push({
        bsid: tagArt[i][0],
        art: tagArt[i][1]});
      } 
      set=0;
    }
  }

  // **********combine artMerchent & printinfoMetric

  
  
  for(var i=0;i<array_ArtMerchant.length;i++)
  {
    if(array_ArtMerchant)
    {            
      var set=0;
      
      for(var j=0;j<printinfoMetric.length;j++)
      {               
        if(printinfoMetric)
        {
            
          if(array_ArtMerchant[i].bsid==printinfoMetric[j].id)
          { 
           
            set=1;
            array_userSelect.push({
            bsid: array_ArtMerchant[i].bsid,
            art: array_ArtMerchant[i].art,
            merchant: array_ArtMerchant[i].merchant,
            cardSize: printinfoMetric[j].cardSize,
            mediaSize: printinfoMetric[j].mediaSize,
            printer: printinfoMetric[j].printerName
            
            });
          }
        }
      }
      if(set==0)
      {
        array_userSelect.push({
        bsid: array_ArtMerchant[i].bsid,
        art: array_ArtMerchant[i].art,
        merchant: array_ArtMerchant[i].merchant});
      } 
      set=0;
    }
  }
  

  for(var x=0;x<array_userSelect.length;x++)
  {
    if(array_userSelect[x].art){
    var just=array_userSelect[x].art.split("::");
    }
    if(array_userSelect[x].merchant){
    var just1=array_userSelect[x].merchant.split("$");
    }
    
    var obj={};
    var name = array_userSelect[x].bsid;
    obj[name] = just[1]+","+just1[0]+",$"+just1[1]+","+array_userSelect[x].cardSize+","+array_userSelect[x].mediaSize+","+array_userSelect[x].printer;
    array_sub.push(obj);
  }
  var array=[{
                "user_data":array_sub
            }];
  return array;
}

exports.userSelect=userSelect; 



//Here is the Major data JSON creation

var userTimeKeeping=function userTimeKeeping(matrixMajorData)
{
  
  var tmparray = keys(matrixMajorData[0]);
  var tmparray1; 
 
  var array_sub=[];
  
  var key={keys:"User ID,Home or Index Page Start,End Home-Start Artwork Screen, Design selected, Giftcard selected, Purchase requested, request for gift code,response for gift code,request for Print, job start, job finish,print complete,start of completion screen"};
  array_sub.push(key);
  
  for(var i=0;i<tmparray.length;i++)
  {
    for(var k=1;k<matrixMajorData.length;k++)
    {
      var PageStart,artPageStart,chooseArtTime,chooseMerchantTime,personalizeTime,purchaseRequest,reqTime,resTime,printReqTime,jobStartTime,jobFinishTime,printCompletedTime,startofcompletionScreen;
      tmparray1=values(matrixMajorData[k]);

      for(var j=0;j<tmparray1.length;j++)
      {
        if(tmparray[i] ==tmparray1[j].key){
          switch(k)
          {
            case 1:
              PageStart= tmparray1[j].value;
              break;
            case 2:
              artPageStart= tmparray1[j].value;
              break;
            case 3:
              chooseArtTime= tmparray1[j].value;
              break;
            case 5:
              chooseMerchantTime= tmparray1[j].value;
              break;
            case 6:
              purchaseRequest= tmparray1[j].value;
              break;
            case 7:
              reqTime= tmparray1[j].value;
              break;
            case 8:
              resTime= tmparray1[j].value;
              break;
            case 9:
              printReqTime= tmparray1[j].value;
              break;
            case 10:
              jobStartTime= tmparray1[j].value;
              break;
            case 11:
              jobFinishTime= tmparray1[j].value;
              break;
            case 12:
              printCompletedTime= tmparray1[j].value;
              break;
            case 13:
              startofcompletionScreen= tmparray1[j].value;
              break;
          }
          }
        }
      }  
          
   var obj={};
          var name = tmparray[i];
          obj[name] =PageStart+","+artPageStart+","+chooseArtTime+","+chooseMerchantTime+","+purchaseRequest+","+reqTime+","+resTime+","+printReqTime+","+jobStartTime+","+jobFinishTime+","+printCompletedTime +","+startofcompletionScreen;
          array_sub.push(obj);
    PageStart='undefined';
    artPageStart='undefined';
    chooseArtTime ='undefined'; 
    chooseMerchantTime ='undefined';
    personalizeTime='undefined';
    purchaseRequest='undefined';
    reqTime='undefined';
    resTime='undefined';
    printReqTime='undefined';
    jobStartTime='undefined';
    jobFinishTime='undefined';
    printCompletedTime='undefined';
    startofcompletionScreen='undefined';
  }  
  
   var array=[{
                "major_data":array_sub
            }];
   return array;
 
}

exports.userTimeKeeping=userTimeKeeping;




function keys(d) {
  var ret = [];
  for (var k in d)
  	ret.push(k);
  return ret;
}

function aggregate(a) {
  var total = 0;
  var l = a.length;
  for (var i = 0 ;  i<l ; i++)
    total += a[i];
  return total;
}

function arrayMin (a) {
 return Math.min.apply(null,a);
}

function arrayMax (a) {
 return Math.max.apply(null,a);
}
var getcount_change = function(tmp) {
  var count = {};
  for(var i = 0; i < tmp.length; i++) {
    
    count[tmp[i][1]] = (count[tmp[i][1]] || 0) + 1;
    
  }
  
  return count;
}

function values(d) {
    
  var ret = [];
  for (var k in d){
    var obj={'key':k , 'value':d[k]};
    ret.push(obj);
  }
 
  return ret;
}